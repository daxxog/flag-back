/* FlagBack
 * waitfor -- everything. cbpipe + async-waitfor
 * (c) 2013 David (daXXog) Volm ><> + + + <><
 * Released under Apache License, Version 2.0:
 * http://www.apache.org/licenses/LICENSE-2.0.html  
 */ !function(t,n){"object"==typeof exports?module.exports=n():"function"==typeof define&&define.amd?define(n):t.FlagBack=n()}(this,function(){var t=function(){var t=function(){this.ran=!1,this.q=[]};return t.prototype.builder=function(){var t=this;return function(n){"function"==typeof n?t.ran===!0?n():t.q.push(n):(t.ran===!1&&(t.q.forEach(function(t){t()}),t.q=[]),t.ran=!0)}},(new t).builder()},n=t,o=function(t,o){this.stack=[],this.cbs=0,this.cb=t,this.once="boolean"==typeof o?o:!1,this.called=!1,this.wait=n()};return o.prototype.add=function(){var t=this,n=t.stack.push(function(){setTimeout(function(){delete t.stack[n],t.cbs--,0!==t.cbs||(t.once?t.called!==!1:t.once)||(t.stack=[],t.called=!0,t.cb())},1)})-1;return t.cbs++,function(){t.wait(t.stack[n])}},o.prototype.flow=function(){this.wait()},o});